{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaikh mujammil\\\\OneDrive\\\\Desktop\\\\MY PROJECT\\\\client\\\\src\\\\Pages\\\\Science.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { getSciencePosts } from '../actions/sciencePosts';\nimport Cards from '../Components/Cards';\nimport { setIsLoading } from '../actions/isLoading';\nimport { setCurrentPageScience } from '../actions/idFor';\nimport isLoading from '../reducers/isLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Science = () => {\n  _s();\n\n  console.log('In Science');\n  const dispatch = useDispatch();\n  const sciencePosts = useSelector(state => state.sciencePosts);\n  const currentPage = useSelector(state => state.idFor.currentPageScience);\n  const isLoading = useSelector(state => state.isLoading);\n  useEffect(() => {\n    dispatch(setIsLoading(true));\n    dispatch(getSciencePosts(currentPage));\n  }, [dispatch, currentPage]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n    type: \"Ovelots\",\n    color: \"#000000\",\n    height: 500,\n    width: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Cards, {\n    posts: sciencePosts,\n    setCurrentPage: setCurrentPageScience,\n    currentPage: currentPage,\n    pageName: \"REVIEWS\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Science, \"i48KfrlFc47NZLFzhEcRQQlSTSg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Science;\nexport default Science;\n\nvar _c;\n\n$RefreshReg$(_c, \"Science\");","map":{"version":3,"sources":["C:/Users/shaikh mujammil/OneDrive/Desktop/MY PROJECT/client/src/Pages/Science.js"],"names":["React","useEffect","useSelector","useDispatch","Loader","getSciencePosts","Cards","setIsLoading","setCurrentPageScience","isLoading","Science","console","log","dispatch","sciencePosts","state","currentPage","idFor","currentPageScience"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,YAAY,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAME,WAAW,GAAGd,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,kBAAxB,CAA/B;AACA,QAAMT,SAAS,GAAGP,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACN,SAAhB,CAA7B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACN,YAAY,CAAC,IAAD,CAAb,CAAR;AAEAM,IAAAA,QAAQ,CAACR,eAAe,CAACW,WAAD,CAAhB,CAAR;AACD,GAJQ,EAIN,CAACH,QAAD,EAAWG,WAAX,CAJM,CAAT;AAMA,SACEP,SAAS,gBACP,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAuC,IAAA,MAAM,EAAE,GAA/C;AAAoD,IAAA,KAAK,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEK,YAAd;AAA4B,IAAA,cAAc,EAAEN,qBAA5C;AAAmE,IAAA,WAAW,EAAEQ,WAAhF;AAA6F,IAAA,QAAQ,EAAE;AAAvG;AAAA;AAAA;AAAA;AAAA,UAJJ;AAOD,CAtBD;;GAAMN,O;UAIaP,W,EACID,W,EACDA,W,EACFA,W;;;KAPdQ,O;AAwBN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { getSciencePosts } from '../actions/sciencePosts'\r\nimport Cards from '../Components/Cards'\r\nimport { setIsLoading } from '../actions/isLoading';\r\nimport { setCurrentPageScience } from '../actions/idFor'\r\nimport isLoading from '../reducers/isLoading'\r\n\r\n\r\nconst Science = () => {\r\n\r\n  console.log('In Science');\r\n\r\n  const dispatch = useDispatch()\r\n  const sciencePosts = useSelector((state) => state.sciencePosts)\r\n  const currentPage = useSelector((state) => state.idFor.currentPageScience)\r\n  const isLoading = useSelector(state => state.isLoading)\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(true))\r\n\r\n    dispatch(getSciencePosts(currentPage))\r\n  }, [dispatch, currentPage])\r\n\r\n  return (\r\n    isLoading ? (\r\n      <Loader type=\"Ovelots\" color=\"#000000\" height={500} width={80} />\r\n    ) : (\r\n      <Cards posts={sciencePosts} setCurrentPage={setCurrentPageScience} currentPage={currentPage} pageName={\"REVIEWS\"} />\r\n    )\r\n  )\r\n}\r\n\r\nexport default Science\r\n"]},"metadata":{},"sourceType":"module"}