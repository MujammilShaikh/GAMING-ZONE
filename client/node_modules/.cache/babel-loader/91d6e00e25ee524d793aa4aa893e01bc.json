{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import Loader from'react-loader-spinner';import{useLocation}from'react-router-dom';import{getSearchedPosts}from'../actions/searchedPosts';import Cards from'../Components/Cards';import{setIsLoading}from'../actions/isLoading';import{setCurrentPageSearch}from'../actions/idFor';import{jsx as _jsx}from\"react/jsx-runtime\";var SearchedPosts=function SearchedPosts(){console.log('In Search');var dispatch=useDispatch();var location=useLocation();var searchedPosts=useSelector(function(state){return state.SearchedPosts;});var currentPage=useSelector(function(state){return state.idFor.currentPageSearch;});var isLoading=useSelector(function(state){return state.isLoading;});// const query = useSelector(state => state.searchedQuery)\nconsole.log(searchedPosts,'sesasasasasasaarchedpost');var query=location.state.query;var modifiedQuery={data:query.toString().split(\" \")};useEffect(function(){dispatch(setIsLoading(true));dispatch(getSearchedPosts(currentPage,modifiedQuery));},[dispatch,currentPage,searchedPosts,modifiedQuery]);return isLoading?/*#__PURE__*/_jsx(Loader,{type:\"Ovelots\",color:\"#FFFF33\",height:500,width:80}):/*#__PURE__*/_jsx(Cards,{posts:searchedPosts,setCurrentPage:setCurrentPageSearch,currentPage:currentPage,pageName:\"RESULT\"})// <h1>Searched items here</h1>\n;};export default SearchedPosts;","map":{"version":3,"sources":["C:/Users/shaikh mujammil/OneDrive/Desktop/MY PROJECT/client/src/Pages/SearchedPosts.js"],"names":["React","useEffect","useSelector","useDispatch","Loader","useLocation","getSearchedPosts","Cards","setIsLoading","setCurrentPageSearch","SearchedPosts","console","log","dispatch","location","searchedPosts","state","currentPage","idFor","currentPageSearch","isLoading","query","modifiedQuery","data","toString","split"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,OAASC,gBAAT,KAAiC,0BAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,OAASC,YAAT,KAA6B,sBAA7B,CACA,OAASC,oBAAT,KAAqC,kBAArC,C,2CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAE1BC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAEA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,aAAa,CAAGb,WAAW,CAAC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACN,aAAjB,EAAD,CAAjC,CACA,GAAMO,CAAAA,WAAW,CAAGf,WAAW,CAAC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACE,KAAN,CAAYC,iBAAvB,EAAD,CAA/B,CACA,GAAMC,CAAAA,SAAS,CAAGlB,WAAW,CAAC,SAAAc,KAAK,QAAIA,CAAAA,KAAK,CAACI,SAAV,EAAN,CAA7B,CACA;AAEAT,OAAO,CAACC,GAAR,CAAYG,aAAZ,CAA2B,0BAA3B,EAZ0B,GAclBM,CAAAA,KAdkB,CAcRP,QAAQ,CAACE,KAdD,CAclBK,KAdkB,CAgB1B,GAAMC,CAAAA,aAAa,CAAG,CACpBC,IAAI,CAAEF,KAAK,CAACG,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CADc,CAAtB,CAIAxB,SAAS,CAAC,UAAM,CACdY,QAAQ,CAACL,YAAY,CAAC,IAAD,CAAb,CAAR,CAEAK,QAAQ,CAACP,gBAAgB,CAACW,WAAD,CAAcK,aAAd,CAAjB,CAAR,CACD,CAJQ,CAIN,CAACT,QAAD,CAAWI,WAAX,CAAwBF,aAAxB,CAAuCO,aAAvC,CAJM,CAAT,CAMA,MACEF,CAAAA,SAAS,cACP,KAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,KAAK,CAAC,SAA7B,CAAuC,MAAM,CAAE,GAA/C,CAAoD,KAAK,CAAE,EAA3D,EADO,cAGP,KAAC,KAAD,EAAO,KAAK,CAAEL,aAAd,CAA6B,cAAc,CAAEN,oBAA7C,CAAmE,WAAW,CAAEQ,WAAhF,CAA6F,QAAQ,CAAE,QAAvG,EACA;AALJ,CAQD,CAlCD,CAoCA,cAAeP,CAAAA,aAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Loader from 'react-loader-spinner'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport { getSearchedPosts } from '../actions/searchedPosts'\r\nimport Cards from '../Components/Cards'\r\nimport { setIsLoading } from '../actions/isLoading';\r\nimport { setCurrentPageSearch } from '../actions/idFor'\r\n\r\n\r\nconst SearchedPosts = () => {\r\n\r\n  console.log('In Search')\r\n\r\n  const dispatch = useDispatch()\r\n  const location = useLocation()\r\n\r\n  const searchedPosts = useSelector((state) => state.SearchedPosts)\r\n  const currentPage = useSelector((state) => state.idFor.currentPageSearch)\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  // const query = useSelector(state => state.searchedQuery)\r\n\r\n  console.log(searchedPosts, 'sesasasasasasaarchedpost');\r\n\r\n  const { query } = location.state\r\n\r\n  const modifiedQuery = {\r\n    data: query.toString().split(\" \")\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(true))\r\n\r\n    dispatch(getSearchedPosts(currentPage, modifiedQuery))\r\n  }, [dispatch, currentPage, searchedPosts, modifiedQuery])\r\n\r\n  return (\r\n    isLoading ? (\r\n      <Loader type=\"Ovelots\" color=\"#FFFF33\" height={500} width={80} />\r\n    ) : (\r\n      <Cards posts={searchedPosts} setCurrentPage={setCurrentPageSearch} currentPage={currentPage} pageName={\"RESULT\"} />\r\n      // <h1>Searched items here</h1>\r\n    )\r\n  )\r\n}\r\n\r\nexport default SearchedPosts\r\n"]},"metadata":{},"sourceType":"module"}