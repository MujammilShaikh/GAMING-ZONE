{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaikh mujammil\\\\OneDrive\\\\Desktop\\\\MY PROJECT\\\\client\\\\src\\\\Pages\\\\SearchedPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { useLocation } from 'react-router-dom';\nimport { getSearchedPosts } from '../actions/searchedPosts';\nimport Cards from '../Components/Cards';\nimport { setIsLoading } from '../actions/isLoading';\nimport { setCurrentPageSearch } from '../actions/idFor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchedPosts = () => {\n  _s();\n\n  console.log('In Search');\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const searchedPosts = useSelector(state => state.SearchedPosts);\n  const currentPage = useSelector(state => state.idFor.currentPageSearch);\n  const isLoading = useSelector(state => state.isLoading); // const query = useSelector(state => state.searchedQuery)\n\n  console.log(searchedPosts, 'sesasasasasasaarchedpost');\n  const {\n    query\n  } = location.state;\n  const modifiedQuery = {\n    data: query.toString().split(\" \")\n  };\n  useEffect(() => {\n    dispatch(setIsLoading(true));\n    dispatch(getSearchedPosts(currentPage, modifiedQuery));\n  }, [dispatch, currentPage, searchedPosts, modifiedQuery]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n    type: \"Ovelots\",\n    color: \"#FFFF33\",\n    height: 500,\n    width: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Cards, {\n    posts: searchedPosts,\n    setCurrentPage: setCurrentPageSearch,\n    currentPage: currentPage,\n    pageName: \"RESULT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this) // <h1>Searched items here</h1>\n  ;\n};\n\n_s(SearchedPosts, \"+IkHbNnAt1Mgc9bD/4fisSi+35A=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector, useSelector];\n});\n\n_c = SearchedPosts;\nexport default SearchedPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchedPosts\");","map":{"version":3,"sources":["C:/Users/shaikh mujammil/OneDrive/Desktop/MY PROJECT/client/src/Pages/SearchedPosts.js"],"names":["React","useEffect","useSelector","useDispatch","Loader","useLocation","getSearchedPosts","Cards","setIsLoading","setCurrentPageSearch","SearchedPosts","console","log","dispatch","location","searchedPosts","state","currentPage","idFor","currentPageSearch","isLoading","query","modifiedQuery","data","toString","split"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,oBAAT,QAAqC,kBAArC;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,aAAa,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACN,aAAlB,CAAjC;AACA,QAAMO,WAAW,GAAGf,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,iBAAxB,CAA/B;AACA,QAAMC,SAAS,GAAGlB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACI,SAAhB,CAA7B,CAT0B,CAU1B;;AAEAT,EAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ,EAA2B,0BAA3B;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAYP,QAAQ,CAACE,KAA3B;AAEA,QAAMM,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAEF,KAAK,CAACG,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB;AADc,GAAtB;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACL,YAAY,CAAC,IAAD,CAAb,CAAR;AAEAK,IAAAA,QAAQ,CAACP,gBAAgB,CAACW,WAAD,EAAcK,aAAd,CAAjB,CAAR;AACD,GAJQ,EAIN,CAACT,QAAD,EAAWI,WAAX,EAAwBF,aAAxB,EAAuCO,aAAvC,CAJM,CAAT;AAMA,SACEF,SAAS,gBACP,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAuC,IAAA,MAAM,EAAE,GAA/C;AAAoD,IAAA,KAAK,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEL,aAAd;AAA6B,IAAA,cAAc,EAAEN,oBAA7C;AAAmE,IAAA,WAAW,EAAEQ,WAAhF;AAA6F,IAAA,QAAQ,EAAE;AAAvG;AAAA;AAAA;AAAA;AAAA,UAHO,CAIP;AALJ;AAQD,CAlCD;;GAAMP,a;UAIaP,W,EACAE,W,EAEKH,W,EACFA,W,EACFA,W;;;KATdQ,a;AAoCN,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Loader from 'react-loader-spinner'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport { getSearchedPosts } from '../actions/searchedPosts'\r\nimport Cards from '../Components/Cards'\r\nimport { setIsLoading } from '../actions/isLoading';\r\nimport { setCurrentPageSearch } from '../actions/idFor'\r\n\r\n\r\nconst SearchedPosts = () => {\r\n\r\n  console.log('In Search')\r\n\r\n  const dispatch = useDispatch()\r\n  const location = useLocation()\r\n\r\n  const searchedPosts = useSelector((state) => state.SearchedPosts)\r\n  const currentPage = useSelector((state) => state.idFor.currentPageSearch)\r\n  const isLoading = useSelector(state => state.isLoading)\r\n  // const query = useSelector(state => state.searchedQuery)\r\n\r\n  console.log(searchedPosts, 'sesasasasasasaarchedpost');\r\n\r\n  const { query } = location.state\r\n\r\n  const modifiedQuery = {\r\n    data: query.toString().split(\" \")\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(true))\r\n\r\n    dispatch(getSearchedPosts(currentPage, modifiedQuery))\r\n  }, [dispatch, currentPage, searchedPosts, modifiedQuery])\r\n\r\n  return (\r\n    isLoading ? (\r\n      <Loader type=\"Ovelots\" color=\"#FFFF33\" height={500} width={80} />\r\n    ) : (\r\n      <Cards posts={searchedPosts} setCurrentPage={setCurrentPageSearch} currentPage={currentPage} pageName={\"RESULT\"} />\r\n      // <h1>Searched items here</h1>\r\n    )\r\n  )\r\n}\r\n\r\nexport default SearchedPosts\r\n"]},"metadata":{},"sourceType":"module"}