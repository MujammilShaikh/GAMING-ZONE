{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaikh mujammil\\\\OneDrive\\\\Desktop\\\\MY PROJECT\\\\client\\\\src\\\\Pages\\\\Computer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { getComputerPosts } from '../actions/computerPosts';\nimport Cards from '../Components/Cards';\nimport { setIsLoading } from '../actions/isLoading';\nimport { setCurrentPageComputer } from '../actions/idFor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Computer = () => {\n  _s();\n\n  console.log('In comp');\n  const dispatch = useDispatch();\n  const computerPosts = useSelector(state => state.computerPosts);\n  const currentPage = useSelector(state => state.idFor.currentPageComputer);\n  const isLoading = useSelector(state => state.isLoading);\n  useEffect(() => {\n    dispatch(setIsLoading(true));\n    dispatch(getComputerPosts(currentPage));\n  }, [dispatch, currentPage]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n    type: \"Ovelots\",\n    color: \"#FFFF33\",\n    height: 500,\n    width: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Cards, {\n    posts: computerPosts,\n    setCurrentPage: setCurrentPageComputer,\n    currentPage: currentPage,\n    pageName: \"NEWS\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Computer, \"CIOG5fFBnHKGk91p1OwY2GzKUHo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Computer;\nexport default Computer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Computer\");","map":{"version":3,"sources":["C:/Users/shaikh mujammil/OneDrive/Desktop/MY PROJECT/client/src/Pages/Computer.js"],"names":["React","useEffect","useSelector","useDispatch","Loader","getComputerPosts","Cards","setIsLoading","setCurrentPageComputer","Computer","console","log","dispatch","computerPosts","state","currentPage","idFor","currentPageComputer","isLoading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,sBAAT,QAAuC,kBAAvC;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,aAAa,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC;AACA,QAAME,WAAW,GAAGb,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,mBAAxB,CAA/B;AACA,QAAMC,SAAS,GAAGhB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACI,SAAhB,CAA7B;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACL,YAAY,CAAC,IAAD,CAAb,CAAR;AAEAK,IAAAA,QAAQ,CAACP,gBAAgB,CAACU,WAAD,CAAjB,CAAR;AACD,GAJQ,EAIN,CAACH,QAAD,EAAWG,WAAX,CAJM,CAAT;AAMA,SACEG,SAAS,gBACP,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAuC,IAAA,MAAM,EAAE,GAA/C;AAAoD,IAAA,KAAK,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEL,aAAd;AAA6B,IAAA,cAAc,EAAEL,sBAA7C;AAAqE,IAAA,WAAW,EAAEO,WAAlF;AAA+F,IAAA,QAAQ,EAAE;AAAzG;AAAA;AAAA;AAAA;AAAA,UAJJ;AAOD,CAvBD;;GAAMN,Q;UAIaN,W,EAEKD,W,EACFA,W,EACFA,W;;;KARdO,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { getComputerPosts } from '../actions/computerPosts'\r\nimport Cards from '../Components/Cards'\r\nimport { setIsLoading } from '../actions/isLoading';\r\nimport { setCurrentPageComputer } from '../actions/idFor'\r\n\r\n\r\nconst Computer = () => {\r\n\r\n  console.log('In comp')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const computerPosts = useSelector((state) => state.computerPosts)\r\n  const currentPage = useSelector((state) => state.idFor.currentPageComputer)\r\n  const isLoading = useSelector(state => state.isLoading)\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(true))\r\n\r\n    dispatch(getComputerPosts(currentPage))\r\n  }, [dispatch, currentPage])\r\n\r\n  return (\r\n    isLoading ? (\r\n      <Loader type=\"Ovelots\" color=\"#FFFF33\" height={500} width={80} />\r\n    ) : (\r\n      <Cards posts={computerPosts} setCurrentPage={setCurrentPageComputer} currentPage={currentPage} pageName={\"NEWS\"} />\r\n    )\r\n  )\r\n}\r\n\r\nexport default Computer\r\n"]},"metadata":{},"sourceType":"module"}