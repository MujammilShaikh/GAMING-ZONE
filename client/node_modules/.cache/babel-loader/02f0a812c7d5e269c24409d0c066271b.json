{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/shaikh mujammil/OneDrive/Desktop/MY PROJECT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/shaikh mujammil/OneDrive/Desktop/MY PROJECT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{fetchComputerPosts}from'../api';import{setIsLoading}from'../actions/isLoading';export var getComputerPosts=function getComputerPosts(currentPage){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$fetchComputerP,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetchComputerPosts(currentPage);case 3:_yield$fetchComputerP=_context.sent;data=_yield$fetchComputerP.data;dispatch(setIsLoading(false));console.log(data,'computer');dispatch({type:\"FETCH_ALL\",payload:data});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/shaikh mujammil/OneDrive/Desktop/MY PROJECT/client/src/actions/computerPosts.js"],"names":["fetchComputerPosts","setIsLoading","getComputerPosts","currentPage","dispatch","data","console","log","type","payload"],"mappings":"iWAAA,OAASA,kBAAT,KAAmC,QAAnC,CACA,OAASC,YAAT,KAA6B,sBAA7B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,WAAD,iGAAiB,iBAAOC,QAAP,uLAEtBJ,CAAAA,kBAAkB,CAACG,WAAD,CAFI,4CAErCE,IAFqC,uBAErCA,IAFqC,CAI7CD,QAAQ,CAACH,YAAY,CAAC,KAAD,CAAb,CAAR,CAEAK,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAkB,UAAlB,EACAD,QAAQ,CAAC,CAAEI,IAAI,CAAE,WAAR,CAAqBC,OAAO,CAAEJ,IAA9B,CAAD,CAAR,CAP6C,iFAS7CC,OAAO,CAACC,GAAR,cAT6C,qEAAjB,gEAAzB","sourcesContent":["import { fetchComputerPosts } from '../api'\r\nimport { setIsLoading } from '../actions/isLoading'\r\n\r\nexport const getComputerPosts = (currentPage) => async (dispatch) => {\r\n  try {\r\n    const { data } = await fetchComputerPosts(currentPage)\r\n\r\n    dispatch(setIsLoading(false))\r\n\r\n    console.log(data, 'computer');\r\n    dispatch({ type: \"FETCH_ALL\", payload: data })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}