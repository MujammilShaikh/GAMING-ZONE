{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaikh mujammil\\\\OneDrive\\\\Desktop\\\\MY PROJECT\\\\client\\\\src\\\\Pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { Redirect } from 'react-router-dom';\nimport '../styles/Dashboard.css';\nimport { getAllPosts } from '../actions/dashboardPosts';\nimport DashbordCard from '../Components/DashboardCard';\nimport { setCurrentPageDashboard, setIsLoggedIn } from '../actions/idFor';\nimport { setIsLoading } from '../actions/isLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [craetePost, setCreatePost] = useState(false);\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.dashboardPosts);\n  const currentPage = useSelector(state => state.idFor.currentPageDashboard);\n  const isLoggedIn = useSelector(state => state.idFor.isLoggedIn);\n  const isLoading = useSelector(state => state.isLoading);\n  useEffect(() => {\n    dispatch(setIsLoading(true));\n    dispatch(getAllPosts(currentPage));\n  }, [currentPage]);\n\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (craetePost) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"dashboard/markdownform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  const onCreate = () => {\n    setCreatePost(true);\n  };\n\n  const onLogout = () => {\n    dispatch(setIsLoggedIn(false));\n  };\n\n  const handleNextPage = () => {\n    dispatch(setIsLoading(true));\n    dispatch(setCurrentPageDashboard(currentPage + 1));\n  };\n\n  const handlePreviousPage = () => {\n    dispatch(setIsLoading(true));\n    dispatch(setCurrentPageDashboard(currentPage - 1));\n  };\n\n  console.log(posts);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n    type: \"Ovel\",\n    color: \"#fff\",\n    height: 500,\n    width: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome-p\",\n        children: \"Welcome back, Mujammil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-span-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logout-span\",\n          onClick: onCreate,\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logout-span\",\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(DashbordCard, {\n      post: post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 31\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-div\",\n      children: [currentPage !== 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"previous-page\",\n        onClick: handlePreviousPage,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"next-page\",\n        onClick: handleNextPage,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Dashboard, \"3fMJfQFrJeovDKhW0xIrB2Dd0zY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/shaikh mujammil/OneDrive/Desktop/MY PROJECT/client/src/Pages/Dashboard.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Loader","Redirect","getAllPosts","DashbordCard","setCurrentPageDashboard","setIsLoggedIn","setIsLoading","Dashboard","craetePost","setCreatePost","dispatch","posts","state","dashboardPosts","currentPage","idFor","currentPageDashboard","isLoggedIn","isLoading","onCreate","onLogout","handleNextPage","handlePreviousPage","console","log","map","post","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from 'react-loader-spinner'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport '../styles/Dashboard.css'\r\nimport { getAllPosts } from '../actions/dashboardPosts'\r\nimport DashbordCard from '../Components/DashboardCard'\r\nimport { setCurrentPageDashboard, setIsLoggedIn } from '../actions/idFor';\r\nimport { setIsLoading } from '../actions/isLoading';\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  const [craetePost, setCreatePost] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const posts = useSelector(state => state.dashboardPosts)\r\n  const currentPage = useSelector((state) => state.idFor.currentPageDashboard)\r\n  const isLoggedIn = useSelector((state) => state.idFor.isLoggedIn)\r\n  const isLoading = useSelector(state => state.isLoading)\r\n\r\n  useEffect(() => {\r\n    dispatch(setIsLoading(true))\r\n    dispatch(getAllPosts(currentPage))\r\n  }, [currentPage])\r\n\r\n  if (!isLoggedIn) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  if (craetePost) {\r\n    return <Redirect to=\"dashboard/markdownform\" />\r\n  }\r\n\r\n  const onCreate = () => {\r\n    setCreatePost(true)\r\n  }\r\n\r\n  const onLogout = () => {\r\n    dispatch(setIsLoggedIn(false))\r\n  }\r\n\r\n  const handleNextPage = () => {\r\n    dispatch(setIsLoading(true))\r\n    dispatch(setCurrentPageDashboard(currentPage + 1))\r\n  }\r\n  const handlePreviousPage = () => {\r\n    dispatch(setIsLoading(true))\r\n    dispatch(setCurrentPageDashboard(currentPage - 1))\r\n  }\r\n\r\n  console.log(posts);\r\n\r\n  return (\r\n    isLoading ? (\r\n      <Loader type=\"Ovel\" color=\"#fff\" height={500} width={80} />\r\n    ) : (\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"logout-div\">\r\n          <p className=\"welcome-p\">Welcome back, Mujammil</p>\r\n          <div className=\"logout-span-div\">\r\n            <span className=\"logout-span\" onClick={onCreate}>Create Post</span>\r\n            <span className=\"logout-span\" onClick={onLogout}>Logout</span>\r\n          </div>\r\n        </div>\r\n        {\r\n          posts.map((post) => <DashbordCard key={post._id} post={post} />)\r\n        }\r\n        <div className=\"page-div\">\r\n          {currentPage !== 1 ? <span className=\"previous-page\" onClick={handlePreviousPage}>&lt;</span>\r\n            : null}\r\n          <span className=\"next-page\" onClick={handleNextPage}>&gt;</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}